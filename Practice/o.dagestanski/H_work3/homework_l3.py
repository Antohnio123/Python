print("--- Числа-------------------------------------------------------------------")
print("---Задание №1 Пересчет секунд в часы и минуты------------------------------")
# Определим Функцию inp_digital(title1) - возвращает целое число в строке
def inp_digital(title1) :
    k1 = " "
    while k1.isdigit() == False :
        k1 = input("Введите целое число " + title1 + " \nи нажмите Enter: ")
        if k1.isdigit() == False :
            print("Ошибка, ввели не целое число.")
    return k1

k = inp_digital("секунд")
m = int(int(k) % 3600 // 60)
h = int(int(k) // 3600)
print("It is "+str(h)+" hours "+str(m)+" minutes.")

print("---Задание №2 Пересчет градусов поворота часовой стрелки в часы и минуты ---")
d = inp_digital("градусов")
m = int(int(d) % (360/24) * 240 // 60)
h = int(int(d) // (360/24))
print("It is "+str(h)+" hours "+str(m)+" minutes.")

print("---Строки-------------------------------------------------------------------")
print("---Задание №1 разбор строки по правилам:------------------------------------")
s = " "
while len(s) <  5 :
    s = input("Введите строку не менее пяти символов\nи нажмите Enter: ")
    if  len(s) < 5 :
        print("Ошибка, в строке меньше пяти символов.")

print("1. Третий символ строки: ", s[2])
print("2. Предпоследний символ строки: ", s[len(s)-2])
print("3. Первые пять символов строки: ", s[0 : 5])
print("4. Строка без последних двух символов: ",s[0 : len(s)-2])

# Для строк с длиной больше трех символов
# Опредилим функцию chet_nechet_str(ss,nn) возвращает  символы строки ss c четными и нечетными индексами,
# в зависимости от nn, nn=0 - четные, nn=1 нечетные
def chet_nechet_str(ss,nn) :
    if nn == 0 :
        i = 2
        s1 = ss[0]
    else :
        i = 3
        s1 = ss[1]
    while i < len(ss) :
        s1 = s1 + ss[i]
        i += 2
    return s1

print("5. Символы строки с четными индексами: ", chet_nechet_str(s,0))
print("6. Символы строки с нечетными индексами: ", chet_nechet_str(s,1))

# Для строк с длиной больше трех символов
#Опредилим функцию revers_str(ss,nn) возвращает все символы строки ss в обратном порядке при шаге nn=1,
# при шаге nn=2 через один, начиная с первого
def revers_str(ss,nn) :
    i = len(ss)
    i -= 1
    s1 = s[i]
    i -= nn
    while i >= 0 :
        s1 = s1 + s[i]
        i -= nn
    return s1

print("7. Символы строки в обратном порядке: ", revers_str(s,1))
print("8. Символы строки в обратном порядке через один начиная с последнего: ", revers_str(s,2))
print("9. В строке " + str(len(s)) + " символов.")

print("---Задание №2 ----------------------------------------------------------------")
print("---Замена в строке всех появлений h на H, кроме первого и последнего вхождения")
# Определим функцию c_ch(ss,ch) считает сколько раз символ ch встречается в строке ss
def c_ch(ss,ch) :
    i22 = 0
    i2 = 0
    for i22 in range(0, len(ss)) :
        if s[i22] == ch :
            i2 += 1
    return i2

s = " "
while (len(s) < 3) or (c_ch(s,"h") < 3) :
    print("Введите строку не менее трех символов,")
    s = input("содержащей не менее трех символов h\nи нажмите Enter: ")
    if  len(s) < 3 :
        print("Ошибка, в строке меньше трех символов.")
    elif  c_ch(s,"h") < 3 :
        print("Ошибка, в строке меньше трех символов h.")
s1 = ""
h_count = c_ch(s,"h")
i = 0
i_vx_h = 0
for i in range(0, len(s)) :
    if s[i] == "h" :
        i_vx_h += 1
        if ((i_vx_h == 1) or (i_vx_h == h_count) ) :
            s1 = s1 + s[i]
        else :
            s1 = s1 + "H"
    else :
        s1 = s1 + s[i]

print("Строка, содержащая не менее трех вхождений h, которые заменили на H\n кроме первого и последнего вхождения",s1)

print("---Задание №3 -------------------------------------------------------------")
print("---Перестановка двух слов в строке, разделенных пробелом-------------------")
print("Введите строку из двух слов, разделив слова пробелом\n")
# ввод строки считаем корректным и не проверяем
s = input("и нажмите Enter: ")
s1 = s.split(" ", 1)
s2 = s1[1] + " " + s1[0]
print("Результат перестановки слов местами:",s2)
